{"version":3,"file":"5.f7516b47f4210de40ff6.hot-update.js","sources":["webpack:///pages/index.js"],"sourcesContent":["\n// Pull in env vars\nimport env from '../env-vars';\n\n// Allow Nextjs linking and dynamic pagination\nimport Link from 'next/link';\nimport Head from 'next/head';\n\n// Components\nimport { Component } from 'react'\nimport Credits from \"../components/Credits\";\nimport CreditLine from \"../components/CreditLine\";\nimport NavTop from \"../components/NavTop\";\nimport SocialTop from \"../components/SocialTop\";\nimport Post from '../components/Post';\n\n// Enable Font Awesome! \n// The code below should enable use of anything from this list: https://fontawesome.com/icons?d=gallery&s=solid\n// Using this syntax: <FontAwesomeIcon icon=\"close\"/>\n// If this is needed in  _document.js or its non-Main children, it will need to be copied there\nimport fontawesome from '@fortawesome/fontawesome';\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\nimport freeSolids from '@fortawesome/fontawesome-free-solid';\n// For optimization we should really import the individual solids we use into the library \n/* e.g. \n * import faClose from '@fortawesome/fontawesome-free-solid/faClose'; \n * fontawesome.library.add(faClose);\n */\n// But for development flexibility, we'll import all solids\nfontawesome.library.add(freeSolids);\n\n//const fileExists = require('file-exists');\n\n// Holds serverRuntimeConfig and publicRuntimeConfig from next.config.js, nothing else\nimport getConfig from 'next/config';\nconst {serverRuntimeConfig, publicRuntimeConfig} = getConfig();\n\n\n// Import example data \nvar json;\ntry {\n\tjson = require('../data/example_data.json');\n} catch (err) {\n\t// Silently fail if there's no data to load\n}\n\n/* EVENTS */\n\n// Example event\nthis.handleClick = (e) => {\n\talert(`Logging a button press on ${e.currentTarget.id}!`);\n}\n\n/* END EVENTS */\n\n// Export the Main HTML\nexport default class extends Component {\n  static async getInitialProps () {\n    // Fetch list of posts to create links to pages \n    var posts = [];\n    // You can safely erase the 2 lines below if not linking to dynamic pages\n  \tposts = require('../data/example_data.json');\n\t\tposts = posts.records;\n\t\tconsole.log(posts);\n\n\t\treturn { posts };\n  }\n\n  render () {\n  \treturn (\n  \t\t<main>\n        <Head>\n          <SocialTop />\n          <script dangerouslySetInnerHTML={{ __html: `\n          \twindow.HDN=${publicRuntimeConfig.ANALYTICS};\n            HDN.dataLayer.href.pageUrlPath = window.location.pathname;\n            HDN.dataLayer.href.pageUrlPathFolders = window.location.pathname.replace(/[A-Za-z0-9-_.]+$/, '');\n            HDN.dataLayer.href.pageUrlHash = window.location.hash;\n            if (window.location.search){\n              HDN.dataLayer.href.pageUrlQueryParams = window.location.search.replace(/^\\?/, '');\n            }\n          `}} />\n        </Head>\n\t\t\t\t<div id=\"project-wrapper\">\n\n\t\t\t\t\t<div id=\"topper\">\n\t\t\t\t\t\t<div className=\"img-wrapper\">\n\t\t\t\t\t\t\t<img className=\"starter-img\" src={`${publicRuntimeConfig.ASSET_PATH}${env.STATIC_URL}react.gif`} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* This prop will allow the nav to stick when user scrolls past */}\n\t\t\t\t\t<NavTop enableStick={true} /> \n\n\t\t\t\t\t<div id=\"intro\">\n\t\t\t\t\t\t<div id=\"title\">\n\t\t\t\t\t\t\t<h1>A brave new template</h1>\n\t\t\t\t\t\t\t<p>Words can be like X-rays if you use them properly &mdash; they'll go through anything.</p>\n\t\t\t\t\t\t\t<p className=\"byline\">By <a href=\"https://www.sfchronicle.com/2018/in-depth-projects/\" target=\"_blank\">the Interactive Team</a></p>\n\t\t\t\t\t\t\t<p className=\"dateline\">January 1, 1970</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div id=\"article\">\n\t\t\t\t\t\t<p>The Savage nodded, frowning. \"You got rid of them. Yes, that's just like you. Getting rid of everything unpleasant instead of learning to put up with it. Whether 'tis better in the mind to suffer the slings and arrows or outrageous fortune, or to take arms against a sea of troubles and by opposing end them... But you don't do either. Neither suffer nor oppose. You just abolish the slings and arrows. It's too easy.</p>\n\n\n\t\t\t\t\t\t{/* Example of React conditional rendering */}\n\t\t\t\t\t\t{ (\"true\" === \"true\") &&\n\t\t\t\t\t\t\t<p>This text was rendered based on a condition!</p>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t{/* Example of React ternary rendering */}\n\t\t\t\t\t\t{ (\"true\" === \"true\") ? (\n\t\t\t\t\t\t\t<p>This text will render if the condition is true!</p>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<p>This text will render if the condition is false!</p>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{/* Example of React loop-based rendering */}\n\t\t\t\t\t\t{ [{fruit: \"apple\"}, {fruit: \"orange\"}].map((item) => {\n\t\t\t\t\t\t\tconsole.log(\"Logging item!\", item);\n\t\t\t\t      return <p key={item.fruit}>{item.fruit}</p>\n\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t{/* Example of React conditional AND loop-based rendering (from data pulled by `npm run fetch`) */}\n\t\t\t\t\t\t{ (json) &&\n\t\t\t\t\t\t\tjson.records.map((data) => {\n\t\t\t\t\t\t\t\tconsole.log(\"Logging data!\", data);\n\t\t\t\t\t      return <p key={data.id}>{data.fields.Name}</p>\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t{/* Basic use of events in React */}\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button id=\"example-button\" onClick={(e) => this.handleClick(e)}>Press me!</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{/* Example of a Next js direct link */}\n\t\t\t\t\t\t<Link prefetch href={`${publicRuntimeConfig.ASSET_PATH}/about`}>\n\t\t\t\t\t\t\t<a>About this project</a>\n\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t\t{/* Example of dynamic page creation leveraging Next js */}\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{\tthis.props.posts.length > 0 &&  \n\t\t\t\t\t\t\t\tthis.props.posts.map((post) => {\n\t\t\t\t        \treturn <Post {...post} key={post.id} />\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t    </ul>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div id=\"credits\">\n\t\t\t\t\t\t<h2>Credits</h2>\n\t\t\t\t\t\t<Credits type=\"Development\">\n\t\t\t\t\t\t\t<CreditLine name=\"Lucio Villa\" email=\"LVilla@sfchronicle.com\" twitter=\"luciovilla\" />\n\t\t\t\t\t\t\t<CreditLine name=\"Emma O'Neill\" email=\"EONeill@sfchronicle.com\" twitter=\"emmaruthoneill\" />\n\t\t\t\t\t\t\t<CreditLine name=\"Evan Wagstaff\" email=\"Evan.Wagstaff@sfchronicle.com\" twitter=\"evanwagstaff\" />\n\t\t\t\t\t\t</Credits>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t)\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// pages/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AADA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;AAWA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;AA3GA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AAVA;AACA;AADA;;;;;;;;;;;;AArBA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}